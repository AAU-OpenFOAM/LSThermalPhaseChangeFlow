#!/bin/sh
cd ${0%/*} || exit 1                        # Run from this directory
. $WM_PROJECT_DIR/bin/tools/RunFunctions    # Tutorial run functions.
. $WM_PROJECT_DIR/bin/tools/CleanFunctions  # Tutorial clean functions


interfaceMethods="
MULES
"

#MAXX="150 180 210 240"
MAXX="210"

NC="16"

for XN in $NC
    do
        echo "Setting number of cores to $XN"
        sed "s/XN/$XN/g" system/decomposeParDict.template \
        > system/decomposeParDict
        
        for XM in $MAXX
            do
                echo "Setting grid number in X direction to $XM"
                sed "s/XM/$XM/g" system/blockMeshDict.template \
                > system/blockMeshDict
                
                for method in $interfaceMethods
                    do

                        echo "Setting interface tracking method to $method"

                        sed -e "s/INTERFACE_METHOD/$method/g" \
                        system/fvSolution.template \
                        > system/fvSolution
grep -e '^Time =' -e '^Space-averaged Nusselt lambda =' $method$XM/log.$(getApplication) | awk -F'=' '/Time =/ {t=$NF} /Space-averaged Nusselt lambda*/ {print t"	"$NF}' >> Nusselt.dat # Print result
grep -e '^Time =' -e '^Klimenko correlation number =' $method$XM/log.$(getApplication) | awk -F'=' '/Time =/ {t=$NF} /Klimenko correlation number*/ {print t""$NF}'| head -1| awk '{print $NF}' >> KlimenkoNusselt.dat # Print results
grep -e '^Time =' -e '^Berenson correlation number =' $method$XM/log.$(getApplication) | awk -F'=' '/Time =/ {t=$NF} /Berenson correlation number*/ {print t""$NF}'| head -1| awk '{print $NF}' >> BerensonNusselt.dat # Print results

lambda="0.0023" # charectristic length
sigma=`grep 'sigma' constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g'`
rho=`grep -m2 rho constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | tail -n1`
tsigma=`echo $rho $sigma $lambda | awk '{ printf("%.16G\n",sqrt($1*$3*$3*$3/$2)) }'`
                        
input="Nusselt.dat"
output="t_star_vs_Nusselt.dat"
cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G %.16G\\\\\n", $1/'"${tsigma}"',$2) }' >> $output
  
  
# Extracting interface parameters
input="$method$XM/postProcessing/interfaceParameters/0/interfaceParameters.dat"
output="interfaceParameters.dat"
cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{print $1" "$2" "$3" "$4" "$5" "$6}' >> $output 
                        
input="t_star_vs_Nusselt.dat"
output="modified_Nusselt_value.dat"
cat $input | head -871 |tail -n +625  >> $output
                        
                        
input="modified_Nusselt_value.dat"
output="mean_Nusselt_value.dat.dat"
cat $input | awk '{ total += $2 } END { print total/NR }' >> $output

input1="mean_Nusselt_value.dat.dat"
input2="KlimenkoNusselt.dat"
input3="BerensonNusselt.dat"
mean_Nusselt=`cat $input1 | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G\\\\\n", $1) }'`
KlimenkoNusselt=`cat $input2 | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G\\\\\n", $1) }'`
BrensonNusselt=`cat $input3 | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G\\\\\n", $1) }'`


error=`echo $mean_Nusselt $BrensonNusselt| awk '{ printf("%.16G\\\\\n", ($1-$2)/$1) }'`

output1="$method"_L2error_intrface.txt
output2="$method"_error_intrface.txt
echo $XM $error | awk '{ printf("%.16G %.16G\\\\\n", $1,$2) }' >> $output2
echo $XM $error | awk '{ printf("%.16G %.16G\\\\\n", $1,log($2)/log(10)) }' >> $output1


Extract clock time
input="$method$XM/log.$(getApplication)"
output="$method"_clockTime.txt
clockTime=`cat $input | grep -e 'ClockTime =' | tail -n1 | sed -e 's/s//g'| awk '{print $NF}'`
echo $XM $clockTime | awk '{ printf("%.16G %.16G\\\\\n", $1,$2) }' >> $output                        



                        methodDir="$method$XM"
                        mkdir "$method$XM"
                        cp -r system constant "$method$XM"
                        mv -f  *.dat  log.* postProcessing  "$method$XM"                        
                        cleanCase0
                        done
            done
    done


#------------------------------------------------------------------------------
