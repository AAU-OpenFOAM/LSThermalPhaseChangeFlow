#!/bin/sh
cd ${0%/*} || exit 1                        # Run from this directory
. $WM_PROJECT_DIR/bin/tools/RunFunctions    # Tutorial run functions.
. $WM_PROJECT_DIR/bin/tools/CleanFunctions  # Tutorial clean functions


interfaceMethods="
isoAdvector
MULES
"

MAXX="25 75 125 175"

NC="16"

for XN in $NC
    do
        echo "Setting number of cores to $XN"
        sed "s/XN/$XN/g" system/decomposeParDict.template \
        > system/decomposeParDict
        
        for XM in $MAXX
            do
                echo "Setting grid number in X direction to $XM"
                sed "s/XM/$XM/g" system/blockMeshDict.template \
                > system/blockMeshDict
                
                for method in $interfaceMethods
                    do

                        echo "Setting interface tracking method to $method"

                        sed -e "s/INTERFACE_METHOD/$method/g" \
                        system/fvSolution.template \
                        > system/fvSolution
                        
                        # Extracting interface location
                        input="$method$XM/postProcessing/isosurfaces/0.9/alpha.water_interpolatedIso.raw"
                        output="interface0.5.dat"
                        cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{print $1" "$2}' >> $output
                        
                        
                        # Extracting interface parameters
                        input="$method$XM/postProcessing/interfaceParameters/0/interfaceParameters.dat"
                        output="interfaceParameters.dat"
                        cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{print $1" "$2" "$3" "$4" "$5" "$6}' >> $output
                        

                        # Get simulation global data to normalize x and y
                        Sc=`grep convertToMeters system/blockMeshDict | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        X1=`grep x1 system/blockMeshDict | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        Y1=`grep y1 system/blockMeshDict | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        X=`echo $Sc $X1 | awk '{ printf("%.16G\n", $1*$2) }'`   
                        Y=`echo $Sc $Y1 | awk '{ printf("%.16G\n", $1*$2) }'`      

                        # Compute x* and y*
                        input="interface0.5.dat"
                        output="X_star.vs.Y_star.dat"
                        cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G %.16G\\\\\n", $1/'"${X}"',$2/'"${Y}"') }' >> $output
                        
                        #Extracting gas and liquid properties to calculate analytical delta
                        deltaT="20"
                        g="9.81"
                        nul=`grep nu constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        rhol=`grep rho constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        hl=`grep hf constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        kl=`grep kappa constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | head -1`
                        nug=`grep -m2 nu constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | tail -n1`
                        rhog=`grep -m2 rho constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | tail -n1`
                        hg=`grep -m2 hf constant/transportProperties | awk '{print $NF}' | sed -e 's/;//g' | tail -n1`
                        
                        
                        #calculating Aalytical results
                        input="interface0.5.dat"
                        output="Analytical_X.vs.Y.dat"
                        cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G %.16G\\\\\n",'"(4*${nul}*${rhol}*${kl}*${deltaT}/(${g}*(${hg}-${hl})*${rhol}*(${rhol}-${rhog})))^(.25)"'*('"${Y}"'-$2)^(.25),$2) }' >> $output
                        
                        # Compute analytical x* and y*
                        input="Analytical_X.vs.Y.dat"
                        output="analytical_X_star.vs.Y_star.dat"
                        cat $input | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G %.16G\\\\\n", $1/'"${X}"',$2/'"${Y}"') }' >> $output
                        
                        #compute error
                        input1="analytical_X_star.vs.Y_star.dat"
                        input2="X_star.vs.Y_star.dat"
                        error=`pr -m -t $input1 $input2 | grep -v '^#' | sed -e 's/[()]//g' | awk '{ printf("%.16G\n", (($3-$1)/($1))^2) }' | awk '{ total += $1 } END { print (total/NR)^.5 }'`
#                         
#                         
                        #Extract clock time
                        input="$method$XM/log.$(getApplication)"
                        output="$method"_clockTime.txt
                        clockTime=`cat $input | grep -e 'ClockTime =' | tail -n1 | sed -e 's/s//g'| awk '{print $NF}'`
                        echo $XM $clockTime | awk '{ printf("%.16G %.16G\\\\\n", $1,$2) }' >> $output
                        
                        #Extract clock time
                        input="interfaceParameters.dat"
                        output="$method"_thickness.txt
                        thickness=$(awk 'NR ==19 {print $6}' $input)
                        echo $XM $thickness | awk '{ printf("%.16G %.16G\\\\\n", $1,$2) }' >> $output
                        
                    
                        
#                         
#Extract error for thickness
output1="$method"_L2error_intrface.txt
output2="$method"_error_intrface.txt
echo $XM $error | awk '{ printf("%.16G %.16G\\\\\n", $1,log($2)/log(10)) }' >> $output1
echo $XM $error | awk '{ printf("%.16G %.16G\\\\\n", $1,$2) }' >> $output2       

output="overview.txt"
echo $method $XM $clockTime $error $thickness| awk '{ printf("%-10s %.16G %.16G %.16G %.16G\\\\\n", $1,$2,$3,$4,$5) }' >> $output



                        methodDir="$method$XM"
                        mv -f  *.dat "$method$XM"
                        cleanCase0
                        done
            done
    done


#------------------------------------------------------------------------------
