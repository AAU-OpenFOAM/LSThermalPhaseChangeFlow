/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "(alpha.water.*|psi|H)"
    {
        interfaceMethod "INTERFACE_METHOD";
        isoFaceTol      1e-10;
        surfCellTol     1e-6;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            true;

        nAlphaCorr      2;
        nAlphaSubCycles 1;
        cAlpha          1;
        reconstructionScheme isoAlpha; // plicRDF
        advectionScheme isoAdvection;


        MULESCorr       yes;
                
        maxUnboundedness 1e-5;
        CoCoeff          2;
        maxIter          5;
        nLimiterIter     2;

        solver           PBiCG;
        preconditioner   DILU;
        tolerance        1e-12;
        relTol           0.01;
    }
    
    "(U|UFinal|T|TFinal)"
    {
        solver           PBiCG;
        preconditioner   DILU;
        tolerance        1e-06;
        relTol           0;
    };

    rho
    {
        solver           diagonal;
        tolerance       1e-7;
        relTol          0.1;
    }

    rhoFinal
    {
        $rho;
        tolerance       1e-7;
        relTol          0;
    }
    
    alpha.waterFinal
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
        maxIter         10;
    }
    
    pcorr
    {
        $p;
        relTol           0;
    };

    "(p_rgh|p)"
    {
        solver          PCG;     
	preconditioner 
        {
            preconditioner  GAMG;
            tolerance       1e-08;
            relTol          0;
            nVcycles        2;
            smoother        GaussSeidel;
            nPreSweeps      0;
            nPostSweeps     2;
            nFinestSweeps   2;
            cacheAgglomeration true;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }

        tolerance       1e-08;
        relTol          0.001;
        maxIter         20;
    };
    
    "(p_rghFinal|pFinal)"
     {
        solver          PCG;
        preconditioner   
      {
            preconditioner  GAMG;
            tolerance       1e-08;
            relTol          0;
            nVcycles        2;
            smoother        GaussSeidel;
            nPreSweeps      2;
            nPostSweeps     0;
            nFinestSweeps   2;
            cacheAgglomeration true;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }
        tolerance       1e-08;
        relTol          0;
    };

    mDotSmearFinal
    {
        solver           PCG;
        tolerance        1e-6;
        preconditioner   DIC;
        relTol           0.00;
        smoother         DIC;
    }


    pcorrFinal
    {
        $p_rgh;
        tolerance        1e-9;
        relTol           0;
    }


    "(h|T.*|k|epsilon|R)"
    {
        solver           smoothSolver;
        smoother        symGaussSeidel;
        tolerance        1e-7;
        relTol           0.;
        minIter          15;
        maxIter          50;
    }

    "(U|h|T.*|k|epsilon|R)Final"
    {
        $U;
        tolerance        1e-7;
        relTol           0;
        maxIter          50;
    }
    
    Phi
    {
        $p_rgh;
        relTol          0;
    };
}

PIMPLE
{
    momentumPredictor          true;
    nOuterCorrectors           1;
    nCorrectors                3;
    nNonOrthogonalCorrectors   0;
    
    nAlphaCorr                 1;
    nAlphaSubCycles            4;
    cAlpha                     1;

    pRefCell	 		0;
    pRefValue 			0.0;
 
   smoothItr                   3.0;
   kSmoothItr                  1.0;
}

relaxationFactors
{
    equations
    {
        ".*"           0.5;
    }
}

// ************************************************************************* //
